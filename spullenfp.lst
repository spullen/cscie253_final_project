253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    DROP TRIGGERS
253-SQL> -- ******************************************************
253-SQL> DROP TRIGGER TR_tbUsers_in;

Trigger dropped.

253-SQL> DROP TRIGGER TR_tbVenues_in;

Trigger dropped.

253-SQL> DROP TRIGGER TR_tbShows_in;

Trigger dropped.

253-SQL> DROP TRIGGER TR_tbShows_votingOverlap;

Trigger dropped.

253-SQL> DROP TRIGGER TR_tbBands_in;

Trigger dropped.

253-SQL> DROP TRIGGER TR_tbEntries_in;

Trigger dropped.

253-SQL> DROP TRIGGER TR_tbVotes_in;

Trigger dropped.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    DROP PROCEDURES
253-SQL> -- ******************************************************
253-SQL> DROP PROCEDURE add_band_member;

Procedure dropped.

253-SQL> DROP PROCEDURE add_music_file;

Procedure dropped.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    DROP TABLES
253-SQL> -- Note:  Issue the appropiate commands to drop tables
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> DROP TABLE tbVotes purge;

Table dropped.

253-SQL> DROP TABLE tbEntries purge;

Table dropped.

253-SQL> DROP TABLE tbMemberIds purge;

Table dropped.

253-SQL> DROP TABLE tbMembers purge;

Table dropped.

253-SQL> DROP TABLE tbMusicFileIds purge;

Table dropped.

253-SQL> DROP TABLE tbMusicFiles purge;

Table dropped.

253-SQL> DROP TABLE tbBands purge;

Table dropped.

253-SQL> DROP TABLE tbShows purge;

Table dropped.

253-SQL> DROP TABLE tbVenues purge;

Table dropped.

253-SQL> DROP TABLE tbUsers purge;

Table dropped.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    DROP VIEWS
253-SQL> -- ******************************************************
253-SQL> DROP VIEW averageEntryRatingView;

View dropped.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    DROP SEQUENCES
253-SQL> -- Note:  Issue the appropiate commands to drop sequences
253-SQL> -- ******************************************************
253-SQL> DROP SEQUENCE usersSeq;

Sequence dropped.

253-SQL> DROP SEQUENCE venuesSeq;

Sequence dropped.

253-SQL> DROP SEQUENCE showsSeq;

Sequence dropped.

253-SQL> DROP SEQUENCE bandsSeq;

Sequence dropped.

253-SQL> DROP SEQUENCE entriesSeq;

Sequence dropped.

253-SQL> DROP SEQUENCE votesSeq;

Sequence dropped.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    CREATE TABLES
253-SQL> -- ******************************************************
253-SQL> CREATE TABLE tbUsers (
  2  	     user_id	     char(5) not null
  3  			     constraint rg_user_id check (user_id between '00001' and '99990')
  4  			     constraint pk_tbusers primary key,
  5  	     username	     varchar2(40) not null,
  6  	     email	     varchar2(40) not null,
  7  	     pwd	     varchar2(40) not null,
  8  	     first_name      varchar2(40) not null,
  9  	     last_name	     varchar2(40) not null,
 10  	     is_admin	     char(1) default 0 not null
 11  			     constraint rg_is_admin check(is_admin in (0,1)),
 12  	     constraint uniq_username unique (username),
 13  	     constraint uniq_email unique (email)
 14  );

Table created.

253-SQL> 
253-SQL> CREATE TABLE tbVenues (
  2  	     venue_id	     char(2) not null
  3  			     constraint rg_venue_id check (venue_id between '01' and '90')
  4  			     constraint pk_tbvenues primary key,
  5  	     name	     varchar2(40) not null,
  6  	     street	     varchar2(40) not null,
  7  	     city	     varchar2(40) not null,
  8  	     state	     char(2) not null,
  9  	     zip	     varchar2(10) not null,
 10  	     website	     varchar2(40) null,
 11  	     phone	     varchar2(20) null
 12  );

Table created.

253-SQL> 
253-SQL> CREATE TABLE tbShows (
  2  	     show_id	     char(4) not null
  3  			     constraint rg_show_id check (show_id between '0001' and '9990')
  4  			     constraint pk_tbshows primary key,
  5  	     venue_id	     char(2) not null
  6  			     constraint fk_venue_id_tbvenues references tbVenues(venue_id),
  7  	     created_at      date default sysdate not null,
  8  	     voting_start_date date not null,
  9  	     voting_end_date date not null,
 10  	     show_date	     date not null,
 11  	     constraint rg_voting_dates check (voting_start_date < voting_end_date),
 12  	     constraint rg_show_date check (voting_end_date < show_date)
 13  );

Table created.

253-SQL> 
253-SQL> CREATE TABLE tbBands (
  2  	     band_id	     char(4) not null
  3  			     constraint rg_band_id check (band_id between '0001' and '9990')
  4  			     constraint pk_tbbands primary key,
  5  	     maintainer_id   char(5) not null
  6  			     constraint fk_maintainer_id_tbusers references tbUsers(user_id),
  7  	     name	     varchar2(40) not null,
  8  	     biography	     varchar2(1500) null,
  9  	     website	     varchar2(40) null
 10  );

Table created.

253-SQL> 
253-SQL> CREATE TABLE tbMembers (
  2  	     band_id	     char(4) not null
  3  			     constraint fk_band_id_member_band references tbBands(band_id) on delete cascade,
  4  	     member_id	     char(2) not null
  5  			     constraint rg_member_id check (member_id between '01' and '90'),
  6  	     name	     varchar2(40) not null,
  7  	     instrument      varchar2(40) not null,
  8  	     constraint pk_tbmembers primary key (band_id, member_id)
  9  );

Table created.

253-SQL> 
253-SQL> CREATE TABLE tbMemberIds (
  2  	     member_id	     char(2)
  3  );

Table created.

253-SQL> 
253-SQL> CREATE TABLE tbMusicFiles (
  2  	     band_id	     char(4) not null
  3  			     constraint fk_band_id_mf_band references tbBands(band_id) on delete cascade,
  4  	     music_file_id   char(2) not null
  5  			     constraint rg_music_file_id check (music_file_id between '01' and '90'),
  6  	     title	     varchar2(40) not null,
  7  	     file_path	     varchar2(120) not null,
  8  	     upload_date     date default sysdate not null,
  9  	     constraint pk_tbmusicfiles primary key (band_id, music_file_id)
 10  );

Table created.

253-SQL> 
253-SQL> CREATE TABLE tbMusicFileIds (
  2  	     music_file_id   char(2)
  3  );

Table created.

253-SQL> 
253-SQL> CREATE TABLE tbEntries (
  2  	     entry_id	     char(8) not null
  3  			     constraint rg_entry_id check (entry_id between '00000001' and '99999990')
  4  			     constraint pk_tbentries primary key,
  5  	     band_id	     char(4) not null
  6  			     constraint fk_band_id_tbbands references tbBands(band_id) on delete cascade,
  7  	     show_id	     char(4) not null
  8  			     constraint fk_show_id_tbshows references tbShows(show_id) on delete cascade,
  9  	     entry_date      date default sysdate not null
 10  );

Table created.

253-SQL> 
253-SQL> CREATE TABLE tbVotes (
  2  	     vote_id	     char(8) not null
  3  			     constraint rg_vote_id check (vote_id between '00000001' and '99999990')
  4  			     constraint pk_tbvotes primary key,
  5  	     entry_id	     char(8) null
  6  			     constraint fk_entry_id_tbentries references tbEntries(entry_id) on delete cascade,
  7  	     user_id	     char(5) null
  8  			     constraint fk_user_id_tbusers references tbUsers(user_id) on delete set null,
  9  	     rating	     number(1) not null
 10  			     constraint rg_rating check (rating between 1 and 5),
 11  	     date_voted      date default sysdate not null,
 12  	     constraint uniq_vote unique (entry_id, user_id)
 13  );

Table created.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    CREATE SEQUENCES
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> CREATE SEQUENCE usersSeq
  2    increment by 1
  3    start with 1;

Sequence created.

253-SQL> 
253-SQL> CREATE SEQUENCE venuesSeq
  2    increment by 1
  3    start with 1;

Sequence created.

253-SQL> 
253-SQL> CREATE SEQUENCE showsSeq
  2    increment by 1
  3    start with 1;

Sequence created.

253-SQL> 
253-SQL> CREATE SEQUENCE bandsSeq
  2    increment by 1
  3    start with 1;

Sequence created.

253-SQL> 
253-SQL> CREATE SEQUENCE entriesSeq
  2    increment by 1
  3    start with 1;

Sequence created.

253-SQL> 
253-SQL> CREATE SEQUENCE votesSeq
  2    increment by 1
  3    start with 1;

Sequence created.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    POPULATE THE member and music file ids
253-SQL> -- ******************************************************
253-SQL> BEGIN
  2    for x IN 1..90 loop
  3  	 INSERT INTO tbMemberIds VALUES(x);
  4  	 INSERT INTO tbMusicFileIds VALUES(x);
  5    end loop;
  6    commit;
  7  END;
  8  /

PL/SQL procedure successfully completed.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    CREATE VIEWS
253-SQL> -- ******************************************************
253-SQL> CREATE VIEW averageEntryRatingView
  2  AS
  3    SELECT entry_id, avg(rating) as average_rating
  4    FROM tbVotes
  5    GROUP BY entry_id;

View created.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    VIEW TABLES
253-SQL> --
253-SQL> -- Note:  Issue the appropiate commands to show your data
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> SELECT * FROM tbUsers;

no rows selected

253-SQL> SELECT * FROM tbVenues;

no rows selected

253-SQL> SELECT * FROM tbShows;

no rows selected

253-SQL> SELECT * FROM tbBands;

no rows selected

253-SQL> SELECT * FROM tbMembers;

no rows selected

253-SQL> SELECT * FROM tbMemberIds;

ME                                                                              
--                                                                              
1                                                                               
2                                                                               
3                                                                               
4                                                                               
5                                                                               
6                                                                               
7                                                                               
8                                                                               
9                                                                               
10                                                                              
11                                                                              

ME                                                                              
--                                                                              
12                                                                              
13                                                                              
14                                                                              
15                                                                              
16                                                                              
17                                                                              
18                                                                              
19                                                                              
20                                                                              
21                                                                              
22                                                                              

ME                                                                              
--                                                                              
23                                                                              
24                                                                              
25                                                                              
26                                                                              
27                                                                              
28                                                                              
29                                                                              
30                                                                              
31                                                                              
32                                                                              
33                                                                              

ME                                                                              
--                                                                              
34                                                                              
35                                                                              
36                                                                              
37                                                                              
38                                                                              
39                                                                              
40                                                                              
41                                                                              
42                                                                              
43                                                                              
44                                                                              

ME                                                                              
--                                                                              
45                                                                              
46                                                                              
47                                                                              
48                                                                              
49                                                                              
50                                                                              
51                                                                              
52                                                                              
53                                                                              
54                                                                              
55                                                                              

ME                                                                              
--                                                                              
56                                                                              
57                                                                              
58                                                                              
59                                                                              
60                                                                              
61                                                                              
62                                                                              
63                                                                              
64                                                                              
65                                                                              
66                                                                              

ME                                                                              
--                                                                              
67                                                                              
68                                                                              
69                                                                              
70                                                                              
71                                                                              
72                                                                              
73                                                                              
74                                                                              
75                                                                              
76                                                                              
77                                                                              

ME                                                                              
--                                                                              
78                                                                              
79                                                                              
80                                                                              
81                                                                              
82                                                                              
83                                                                              
84                                                                              
85                                                                              
86                                                                              
87                                                                              
88                                                                              

ME                                                                              
--                                                                              
89                                                                              
90                                                                              

90 rows selected.

253-SQL> SELECT * FROM tbMusicFiles;

no rows selected

253-SQL> SELECT * FROM tbMusicFileIds;

MU                                                                              
--                                                                              
1                                                                               
2                                                                               
3                                                                               
4                                                                               
5                                                                               
6                                                                               
7                                                                               
8                                                                               
9                                                                               
10                                                                              
11                                                                              

MU                                                                              
--                                                                              
12                                                                              
13                                                                              
14                                                                              
15                                                                              
16                                                                              
17                                                                              
18                                                                              
19                                                                              
20                                                                              
21                                                                              
22                                                                              

MU                                                                              
--                                                                              
23                                                                              
24                                                                              
25                                                                              
26                                                                              
27                                                                              
28                                                                              
29                                                                              
30                                                                              
31                                                                              
32                                                                              
33                                                                              

MU                                                                              
--                                                                              
34                                                                              
35                                                                              
36                                                                              
37                                                                              
38                                                                              
39                                                                              
40                                                                              
41                                                                              
42                                                                              
43                                                                              
44                                                                              

MU                                                                              
--                                                                              
45                                                                              
46                                                                              
47                                                                              
48                                                                              
49                                                                              
50                                                                              
51                                                                              
52                                                                              
53                                                                              
54                                                                              
55                                                                              

MU                                                                              
--                                                                              
56                                                                              
57                                                                              
58                                                                              
59                                                                              
60                                                                              
61                                                                              
62                                                                              
63                                                                              
64                                                                              
65                                                                              
66                                                                              

MU                                                                              
--                                                                              
67                                                                              
68                                                                              
69                                                                              
70                                                                              
71                                                                              
72                                                                              
73                                                                              
74                                                                              
75                                                                              
76                                                                              
77                                                                              

MU                                                                              
--                                                                              
78                                                                              
79                                                                              
80                                                                              
81                                                                              
82                                                                              
83                                                                              
84                                                                              
85                                                                              
86                                                                              
87                                                                              
88                                                                              

MU                                                                              
--                                                                              
89                                                                              
90                                                                              

90 rows selected.

253-SQL> SELECT * FROM tbEntries;

no rows selected

253-SQL> SELECT * FROM tbVotes;

no rows selected

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    QUALITY CONTROLS
253-SQL> --
253-SQL> -- Note:  Test the following constraints:
253-SQL> --	   *) Entity integrity
253-SQL> --	   *) Referential integrity
253-SQL> --	   *) Column constraints
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    tbUsers Tests
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- Setup Start
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(99, 'test', 'test@test.com', '3ncryp73d', 'First', 'Last');

1 row created.

253-SQL> -- Setup End
253-SQL> 
253-SQL> -- NULL PK
253-SQL> INSERT INTO tbUsers(user_id, username)
  2  VALUES (NULL, 'test1');
VALUES (NULL, 'test1')
        *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBUSERS"."USER_ID") 


253-SQL> 
253-SQL> -- DUP PK
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(99, 'test1', 'tes1t@test.com', '3ncryp73d', 'First', 'Last');
INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.PK_TBUSERS) violated 


253-SQL> 
253-SQL> -- user_id Range Min
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(0, 'test2', 'test2@test.com', '3ncryp73d', 'First', 'Last');
INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_USER_ID) violated 


253-SQL> 
253-SQL> -- user_id Range Max
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(99999, 'test3', 'test3@test.com', '3ncryp73d', 'First', 'Last');
INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_USER_ID) violated 


253-SQL> 
253-SQL> -- unique username
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(100, 'test', 'test4@test.com', '3ncryp73d', 'First', 'Last');
INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.UNIQ_USERNAME) violated 


253-SQL> 
253-SQL> -- unique email
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(101, 'test4', 'test@test.com', '3ncryp73d', 'First', 'Last');
INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.UNIQ_EMAIL) violated 


253-SQL> 
253-SQL> SELECT * FROM tbUsers;

USER_ USERNAME                                                                  
----- ----------------------------------------                                  
EMAIL                                                                           
----------------------------------------                                        
PWD                                                                             
----------------------------------------                                        
FIRST_NAME                                                                      
----------------------------------------                                        
LAST_NAME                                I                                      
---------------------------------------- -                                      
99    test                                                                      
test@test.com                                                                   
3ncryp73d                                                                       

USER_ USERNAME                                                                  
----- ----------------------------------------                                  
EMAIL                                                                           
----------------------------------------                                        
PWD                                                                             
----------------------------------------                                        
FIRST_NAME                                                                      
----------------------------------------                                        
LAST_NAME                                I                                      
---------------------------------------- -                                      
First                                                                           
Last                                     0                                      
                                                                                

253-SQL> 
253-SQL> -- Cleanup Start
253-SQL> DELETE FROM tbUsers;

1 row deleted.

253-SQL> -- Cleanup End
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    tbVenues Tests
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- Setup Start
253-SQL> INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
  2  VALUES(50, 'Test', '123 Fake St', 'Boston', 'MA', '02155');

1 row created.

253-SQL> -- Setup End
253-SQL> 
253-SQL> -- NULL PK
253-SQL> INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
  2  VALUES(NULL, 'Test1', '123 Fake St', 'Boston', 'MA', '02155');
VALUES(NULL, 'Test1', '123 Fake St', 'Boston', 'MA', '02155')
       *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBVENUES"."VENUE_ID") 


253-SQL> 
253-SQL> -- DUP PK
253-SQL> INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
  2  VALUES(50, 'Test2', '123 Fake St', 'Boston', 'MA', '02155');
INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.PK_TBVENUES) violated 


253-SQL> 
253-SQL> -- venue_id Range Min
253-SQL> INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
  2  VALUES(0, 'Test', '123 Fake St', 'Boston', 'MA', '02155');
INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_VENUE_ID) violated 


253-SQL> 
253-SQL> -- venue_id Range Max
253-SQL> INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
  2  VALUES(99, 'Test', '123 Fake St', 'Boston', 'MA', '02155');
INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_VENUE_ID) violated 


253-SQL> 
253-SQL> -- Cleanup Start
253-SQL> DELETE FROM tbVenues;

1 row deleted.

253-SQL> -- Cleanup End
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    tbShows Tests
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- Setup Start
253-SQL> INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
  2  VALUES(50, 'Test', '123 Fake St', 'Boston', 'MA', '02155');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(90, 50, sysdate, sysdate + 10, sysdate + 20);

1 row created.

253-SQL> -- Setup End
253-SQL> 
253-SQL> -- NULL PK
253-SQL> INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(NULL, 50, sysdate, sysdate + 10, sysdate + 20);
VALUES(NULL, 50, sysdate, sysdate + 10, sysdate + 20)
       *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBSHOWS"."SHOW_ID") 


253-SQL> 
253-SQL> -- DUP PK
253-SQL> INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(90, 50, sysdate, sysdate + 10, sysdate + 20);
INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.PK_TBSHOWS) violated 


253-SQL> 
253-SQL> -- show_id Range Min
253-SQL> INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(0, 50, sysdate, sysdate + 10, sysdate + 20);
INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_SHOW_ID) violated 


253-SQL> 
253-SQL> -- show_id Range Max
253-SQL> INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(9999, 50, sysdate, sysdate + 10, sysdate + 20);
INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_SHOW_ID) violated 


253-SQL> 
253-SQL> -- Non-Existent FK
253-SQL> INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(90, 1, sysdate, sysdate + 10, sysdate + 20);
INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.PK_TBSHOWS) violated 


253-SQL> 
253-SQL> -- Restrict Delete
253-SQL> DELETE FROM tbVenues WHERE venue_id = 50;
DELETE FROM tbVenues WHERE venue_id = 50
*
ERROR at line 1:
ORA-02292: integrity constraint (SPULLEN.FK_VENUE_ID_TBVENUES) violated - child 
record found 


253-SQL> 
253-SQL> 
253-SQL> -- Attempt to insert record where voting start date > voting end date
253-SQL> INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(51, 50, sysdate + 30, sysdate + 20, sysdate + 60);
INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_VOTING_DATES) violated 


253-SQL> 
253-SQL> -- Attempt to insert record where voting end date > show date
253-SQL> INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(51, 50, sysdate + 30, sysdate + 70, sysdate + 60);
INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_SHOW_DATE) violated 


253-SQL> 
253-SQL> -- Attempt to update record where voting start date > voting end date
253-SQL> UPDATE tbShows
  2  SET voting_start_date = (sysdate + 30),
  3  	 voting_end_date = (sysdate + 20),
  4  	 show_date = (sysdate + 60)
  5  WHERE show_id = 90;
UPDATE tbShows
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_VOTING_DATES) violated 


253-SQL> 
253-SQL> -- Attempt to update record where voting end date > show date
253-SQL> UPDATE tbShows
  2  SET voting_start_date = (sysdate + 30),
  3  	 voting_end_date = (sysdate + 70),
  4  	 show_date = (sysdate + 60)
  5  WHERE show_id = 90;
UPDATE tbShows
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_SHOW_DATE) violated 


253-SQL> 
253-SQL> -- Cleanup Start
253-SQL> DELETE FROM tbShows;

1 row deleted.

253-SQL> DELETE FROM tbVenues;

1 row deleted.

253-SQL> -- Cleanup End
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    tbBands Tests
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- Setup Start
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(70, 'test', 'test@test.com', '3ncryp73d', 'First', 'Last');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(80, 70, 'Band');

1 row created.

253-SQL> -- Setup End
253-SQL> 
253-SQL> -- DUP PK
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(80, 70, 'Band1');
INSERT INTO tbBands(band_id, maintainer_id, name)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.PK_TBBANDS) violated 


253-SQL> 
253-SQL> -- NULL PK
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(NULL, 70, 'Band2');
VALUES(NULL, 70, 'Band2')
       *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBBANDS"."BAND_ID") 


253-SQL> 
253-SQL> -- band_id Range min
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(0, 70, 'Band3');
INSERT INTO tbBands(band_id, maintainer_id, name)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_BAND_ID) violated 


253-SQL> 
253-SQL> -- band_id Range max
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(9999, 70, 'Band4');
INSERT INTO tbBands(band_id, maintainer_id, name)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_BAND_ID) violated 


253-SQL> 
253-SQL> -- Non Existent FK
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(81, 71, 'Band5');
INSERT INTO tbBands(band_id, maintainer_id, name)
*
ERROR at line 1:
ORA-02291: integrity constraint (SPULLEN.FK_MAINTAINER_ID_TBUSERS) violated - 
parent key not found 


253-SQL> 
253-SQL> -- Delete restriction
253-SQL> DELETE FROM tbUsers WHERE user_id = 70;
DELETE FROM tbUsers WHERE user_id = 70
*
ERROR at line 1:
ORA-02292: integrity constraint (SPULLEN.FK_MAINTAINER_ID_TBUSERS) violated - 
child record found 


253-SQL> 
253-SQL> -- Cleanup Start
253-SQL> DELETE FROM tbBands;

1 row deleted.

253-SQL> DELETE FROM tbUsers;

1 row deleted.

253-SQL> -- Cleanup End
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    tbMembers Tests
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- Setup Start
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(70, 'test', 'test@test.com', '3ncryp73d', 'First', 'Last');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(80, 70, 'Band');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbMembers(band_id, member_id, name, instrument)
  2  VALUES(80, 1, 'First Last', 'Guitar');

1 row created.

253-SQL> -- Setup End
253-SQL> 
253-SQL> -- DUP PK
253-SQL> INSERT INTO tbMembers(band_id, member_id, name, instrument)
  2  VALUES(80, 1, 'First Last1', 'Guitar');
INSERT INTO tbMembers(band_id, member_id, name, instrument)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.PK_TBMEMBERS) violated 


253-SQL> 
253-SQL> -- NULL PK
253-SQL> INSERT INTO tbMembers(band_id, member_id, name, instrument)
  2  VALUES(NULL, 2, 'First Last2', 'Guitar');
VALUES(NULL, 2, 'First Last2', 'Guitar')
       *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBMEMBERS"."BAND_ID") 


253-SQL> 
253-SQL> INSERT INTO tbMembers(band_id, member_id, name, instrument)
  2  VALUES(80, NULL, 'First Last3', 'Guitar');
VALUES(80, NULL, 'First Last3', 'Guitar')
           *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBMEMBERS"."MEMBER_ID") 


253-SQL> 
253-SQL> INSERT INTO tbMembers(band_id, member_id, name, instrument)
  2  VALUES(NULL, NULL, 'First Last4', 'Guitar');
VALUES(NULL, NULL, 'First Last4', 'Guitar')
       *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBMEMBERS"."BAND_ID") 


253-SQL> 
253-SQL> -- member_id range min
253-SQL> INSERT INTO tbMembers(band_id, member_id, name, instrument)
  2  VALUES(80, 0, 'First Last5', 'Guitar');
INSERT INTO tbMembers(band_id, member_id, name, instrument)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_MEMBER_ID) violated 


253-SQL> 
253-SQL> -- member_id range max
253-SQL> INSERT INTO tbMembers(band_id, member_id, name, instrument)
  2  VALUES(80, 99, 'First Last6', 'Guitar');
INSERT INTO tbMembers(band_id, member_id, name, instrument)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_MEMBER_ID) violated 


253-SQL> 
253-SQL> -- Non-Existent FK
253-SQL> INSERT INTO tbMembers(band_id, member_id, name, instrument)
  2  VALUES(81, 1, 'First Last7', 'Guitar');
INSERT INTO tbMembers(band_id, member_id, name, instrument)
*
ERROR at line 1:
ORA-02291: integrity constraint (SPULLEN.FK_BAND_ID_MEMBER_BAND) violated - 
parent key not found 


253-SQL> 
253-SQL> -- Cascade Delete
253-SQL> SELECT * FROM tbMembers;

BAND ME NAME                                                                    
---- -- ----------------------------------------                                
INSTRUMENT                                                                      
----------------------------------------                                        
80   1  First Last                                                              
Guitar                                                                          
                                                                                

253-SQL> 
253-SQL> DELETE FROM tbBands WHERE band_id = 80;

1 row deleted.

253-SQL> 
253-SQL> SELECT * FROM tbMembers;

no rows selected

253-SQL> 
253-SQL> -- Cleanup Start
253-SQL> DELETE FROM tbMembers;

0 rows deleted.

253-SQL> DELETE FROM tbBands;

0 rows deleted.

253-SQL> DELETE FROM tbUsers;

1 row deleted.

253-SQL> -- Cleanup End
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    tbMusicFiles Tests
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- Setup Start
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(70, 'test', 'test@test.com', '3ncryp73d', 'First', 'Last');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(80, 70, 'Band');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
  2  VALUES(80, 1, 'Title', '/path/to/file.mp3', sysdate);

1 row created.

253-SQL> -- Setup End
253-SQL> 
253-SQL> -- DUP PK
253-SQL> INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
  2  VALUES(80, 1, 'Title1', '/path/to/file.mp3', sysdate);
INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.PK_TBMUSICFILES) violated 


253-SQL> 
253-SQL> -- NULL PK
253-SQL> INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
  2  VALUES(NULL, 1, 'Title2', '/path/to/file.mp3', sysdate);
VALUES(NULL, 1, 'Title2', '/path/to/file.mp3', sysdate)
       *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBMUSICFILES"."BAND_ID") 


253-SQL> 
253-SQL> INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
  2  VALUES(80, NULL, 'Title3', '/path/to/file.mp3', sysdate);
VALUES(80, NULL, 'Title3', '/path/to/file.mp3', sysdate)
           *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBMUSICFILES"."MUSIC_FILE_ID") 


253-SQL> 
253-SQL> INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
  2  VALUES(NULL, NULL, 'Title4', '/path/to/file.mp3', sysdate);
VALUES(NULL, NULL, 'Title4', '/path/to/file.mp3', sysdate)
       *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBMUSICFILES"."BAND_ID") 


253-SQL> 
253-SQL> -- music_file_id range min
253-SQL> INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
  2  VALUES(80, 0, 'Title5', '/path/to/file.mp3', sysdate);
INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_MUSIC_FILE_ID) violated 


253-SQL> 
253-SQL> -- music_file_id range max
253-SQL> INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
  2  VALUES(80, 99, 'Title6', '/path/to/file.mp3', sysdate);
INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_MUSIC_FILE_ID) violated 


253-SQL> 
253-SQL> -- Non-Existent FK
253-SQL> INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
  2  VALUES(81, 1, 'Title7', '/path/to/file.mp3', sysdate);
INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path, upload_date)
*
ERROR at line 1:
ORA-02291: integrity constraint (SPULLEN.FK_BAND_ID_MF_BAND) violated - parent 
key not found 


253-SQL> 
253-SQL> -- Cascade Delete
253-SQL> SELECT * FROM tbMusicFiles;

BAND MU TITLE                                                                   
---- -- ----------------------------------------                                
FILE_PATH                                                                       
--------------------------------------------------------------------------------
UPLOAD_DA                                                                       
---------                                                                       
80   1  Title                                                                   
/path/to/file.mp3                                                               
16-DEC-12                                                                       
                                                                                

253-SQL> 
253-SQL> DELETE FROM tbBands WHERE band_id = 80;

1 row deleted.

253-SQL> 
253-SQL> SELECT * FROM tbMusicFiles;

no rows selected

253-SQL> 
253-SQL> -- Cleanup Start
253-SQL> DELETE FROM tbMusicFiles;

0 rows deleted.

253-SQL> DELETE FROM tbBands;

0 rows deleted.

253-SQL> DELETE FROM tbUsers;

1 row deleted.

253-SQL> -- Cleanup End
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    tbEntries Tests
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- Setup Start
253-SQL> INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
  2  VALUES(50, 'Test', '123 Fake St', 'Boston', 'MA', '02155');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(90, 50, sysdate, sysdate + 10, sysdate + 20);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(70, 'test1', 'test1@test.com', '3ncryp73d', 'First1', 'Last1');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(80, 70, 'Band1');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(71, 'test2', 'test2@test.com', '3ncryp73d', 'First2', 'Last2');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(81, 71, 'Band2');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(72, 'test3', 'test3@test.com', '3ncryp73d', 'First3', 'Last3');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(82, 72, 'Band3');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(50, 80, 90);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(51, 81, 90);

1 row created.

253-SQL> -- Setup End
253-SQL> 
253-SQL> -- Dup PK
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(50, 80, 90);
INSERT INTO tbEntries(entry_id, band_id, show_id)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.PK_TBENTRIES) violated 


253-SQL> 
253-SQL> -- NULL PK
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(NULL, 80, 90);
VALUES(NULL, 80, 90)
       *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBENTRIES"."ENTRY_ID") 


253-SQL> 
253-SQL> -- Non-Existent FK
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(52, 83, 90);
INSERT INTO tbEntries(entry_id, band_id, show_id)
*
ERROR at line 1:
ORA-02291: integrity constraint (SPULLEN.FK_BAND_ID_TBBANDS) violated - parent 
key not found 


253-SQL> 
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(53, 80, 91);
INSERT INTO tbEntries(entry_id, band_id, show_id)
*
ERROR at line 1:
ORA-02291: integrity constraint (SPULLEN.FK_SHOW_ID_TBSHOWS) violated - parent 
key not found 


253-SQL> 
253-SQL> -- entry_id Range min
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(0, 82, 90);
INSERT INTO tbEntries(entry_id, band_id, show_id)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_ENTRY_ID) violated 


253-SQL> 
253-SQL> -- entry_id Range max
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(99999999, 82, 90);
INSERT INTO tbEntries(entry_id, band_id, show_id)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_ENTRY_ID) violated 


253-SQL> 
253-SQL> -- delete cascade of band
253-SQL> SELECT count(*) FROM tbEntries;

  COUNT(*)                                                                      
----------                                                                      
         2                                                                      

253-SQL> 
253-SQL> DELETE FROM tbBands WHERE band_id = 80;

1 row deleted.

253-SQL> 
253-SQL> SELECT count(*) FROM tbEntries;

  COUNT(*)                                                                      
----------                                                                      
         1                                                                      

253-SQL> 
253-SQL> -- delete cascade of show
253-SQL> SELECT count(*) FROM tbEntries;

  COUNT(*)                                                                      
----------                                                                      
         1                                                                      

253-SQL> 
253-SQL> DELETE FROM tbShows WHERE show_id = 90;

1 row deleted.

253-SQL> 
253-SQL> SELECT count(*) FROM tbEntries;

  COUNT(*)                                                                      
----------                                                                      
         0                                                                      

253-SQL> 
253-SQL> -- Cleanup Start
253-SQL> DELETE FROM tbEntries;

0 rows deleted.

253-SQL> DELETE FROM tbBands;

2 rows deleted.

253-SQL> DELETE FROM tbShows;

0 rows deleted.

253-SQL> DELETE FROM tbVenues;

1 row deleted.

253-SQL> DELETE FROM tbUsers;

3 rows deleted.

253-SQL> -- Cleanup End
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    tbVotes Tests
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- Setup Start
253-SQL> INSERT INTO tbVenues(venue_id, name, street, city, state, zip)
  2  VALUES(50, 'Test', '123 Fake St', 'Boston', 'MA', '02155');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbShows(show_id, venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(90, 50, sysdate, sysdate + 10, sysdate + 20);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(70, 'test1', 'test1@test.com', '3ncryp73d', 'First1', 'Last1');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(80, 70, 'Band1');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(71, 'test2', 'test2@test.com', '3ncryp73d', 'First2', 'Last2');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(81, 71, 'Band2');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(72, 'test3', 'test3@test.com', '3ncryp73d', 'First3', 'Last3');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(82, 72, 'Band3');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(73, 'test4', 'test4@test.com', '3ncryp73d', 'First4', 'Last4');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(83, 73, 'Band4');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(74, 'test5', 'test5@test.com', '3ncryp73d', 'First5', 'Last5');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(75, 'test6', 'test6@test.com', '3ncryp73d', 'First6', 'Last6');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(50, 80, 90);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(51, 81, 90);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(52, 82, 90);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbEntries(entry_id, band_id, show_id)
  2  VALUES(53, 83, 90);

1 row created.

253-SQL> 
253-SQL> 
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(1, 50, 74, 1);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(2, 51, 74, 2);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(3, 52, 74, 3);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(4, 53, 75, 4);

1 row created.

253-SQL> -- Setup End
253-SQL> 
253-SQL> -- Dup PK
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(1, 50, 75, 2);
INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.PK_TBVOTES) violated 


253-SQL> 
253-SQL> -- NULL PK
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(NULL, 50, 75, 1);
VALUES(NULL, 50, 75, 1)
       *
ERROR at line 2:
ORA-01400: cannot insert NULL into ("SPULLEN"."TBVOTES"."VOTE_ID") 


253-SQL> 
253-SQL> -- Non-Existent FKs
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(5, 80, 74, 1);
INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
*
ERROR at line 1:
ORA-02291: integrity constraint (SPULLEN.FK_ENTRY_ID_TBENTRIES) violated - 
parent key not found 


253-SQL> 
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(6, 50, 80, 3);
INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
*
ERROR at line 1:
ORA-02291: integrity constraint (SPULLEN.FK_USER_ID_TBUSERS) violated - parent 
key not found 


253-SQL> 
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(7, 54, 75, 3);
INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
*
ERROR at line 1:
ORA-02291: integrity constraint (SPULLEN.FK_ENTRY_ID_TBENTRIES) violated - 
parent key not found 


253-SQL> 
253-SQL> -- rating range low
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(8, 50, 75, 0)
  3  
253-SQL> -- rating range high
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(9, 50, 75, 6);
INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
*
ERROR at line 1:
ORA-02290: check constraint (SPULLEN.RG_RATING) violated 


253-SQL> 
253-SQL> -- unique votes
253-SQL> INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
  2  VALUES(10, 50, 74, 1);
INSERT INTO tbVotes(vote_id, entry_id, user_id, rating)
*
ERROR at line 1:
ORA-00001: unique constraint (SPULLEN.UNIQ_VOTE) violated 


253-SQL> 
253-SQL> -- set null when delete user
253-SQL> SELECT vote_id, entry_id, user_id FROM tbVotes;

VOTE_ID  ENTRY_ID USER_                                                         
-------- -------- -----                                                         
1        50       74                                                            
2        51       74                                                            
3        52       74                                                            
4        53       75                                                            

253-SQL> 
253-SQL> DELETE FROM tbUsers WHERE user_id = 75;

1 row deleted.

253-SQL> 
253-SQL> SELECT vote_id, entry_id, user_id FROM tbVotes;

VOTE_ID  ENTRY_ID USER_                                                         
-------- -------- -----                                                         
1        50       74                                                            
2        51       74                                                            
3        52       74                                                            
4        53                                                                     

253-SQL> 
253-SQL> -- Cascade delete when delete entry
253-SQL> SELECT count(*) FROM tbVotes;

  COUNT(*)                                                                      
----------                                                                      
         4                                                                      

253-SQL> 
253-SQL> DELETE FROM tbEntries WHERE entry_id = 53;

1 row deleted.

253-SQL> 
253-SQL> SELECT count(*) FROM tbVotes;

  COUNT(*)                                                                      
----------                                                                      
         3                                                                      

253-SQL> 
253-SQL> -- Cascade delete when delete band
253-SQL> SELECT count(*) FROM tbVotes;

  COUNT(*)                                                                      
----------                                                                      
         3                                                                      

253-SQL> 
253-SQL> DELETE FROM tbBands WHERE band_id = 80;

1 row deleted.

253-SQL> 
253-SQL> SELECT count(*) FROM tbVotes;

  COUNT(*)                                                                      
----------                                                                      
         2                                                                      

253-SQL> 
253-SQL> -- cascade delete when delete show
253-SQL> SELECT count(*) FROM tbVotes;

  COUNT(*)                                                                      
----------                                                                      
         2                                                                      

253-SQL> 
253-SQL> DELETE FROM tbShows WHERE show_id = 90;

1 row deleted.

253-SQL> 
253-SQL> SELECT count(*) FROM tbVotes;

  COUNT(*)                                                                      
----------                                                                      
         0                                                                      

253-SQL> 
253-SQL> -- Cleanup Start
253-SQL> DELETE FROM tbVotes;

0 rows deleted.

253-SQL> DELETE FROM tbEntries;

0 rows deleted.

253-SQL> DELETE FROM tbBands;

3 rows deleted.

253-SQL> DELETE FROM tbShows;

0 rows deleted.

253-SQL> DELETE FROM tbVenues;

1 row deleted.

253-SQL> DELETE FROM tbUsers;

5 rows deleted.

253-SQL> -- Cleanup End
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    CREATE STORED PROCEDURES
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- add_band_member
253-SQL> -- Retrieves the member_id and inserts a new tbMembers record
253-SQL> CREATE OR REPLACE PROCEDURE add_band_member
  2    (
  3  	 bandId      in  tbMembers.band_id%type,
  4  	 name	     in  tbMembers.name%type,
  5  	 instrument  in  tbMembers.instrument%type,
  6  	 memberId    out tbMemberIds.member_id%type
  7    )
  8  IS
  9    bandMemberId char(2) default null;
 10  BEGIN
 11  
 12    /* Get the band member id */
 13    SELECT member_id into bandMemberId
 14    FROM (
 15  	 SELECT member_id, rownum r
 16  	 FROM tbMemberIds a
 17  	 WHERE NOT EXISTS (
 18  	   SELECT *
 19  	   FROM tbMembers b
 20  	   WHERE a.member_id = b.member_id AND
 21  		 b.band_id = bandId ) AND
 22  	       rownum <= 1
 23    )
 24    WHERE r > 0;
 25  
 26    IF bandMemberId IS NOT NULL THEN
 27  	 /* Insert the new band member record */
 28  	 memberId := bandMemberId;
 29  
 30  	 INSERT INTO tbMembers(band_id, member_id, name, instrument)
 31  	 VALUES
 32  	   (
 33  	     bandId,
 34  	     memberId,
 35  	     name,
 36  	     instrument
 37  	   );
 38    ELSE
 39  	 /* If a band has the reached the max number of members return -1 */
 40  	 memberId := -1;
 41    END IF;
 42  
 43  END add_band_member;
 44  /

Procedure created.

253-SQL> 
253-SQL> -- add_music_file
253-SQL> -- Retrieves the music_file_id and inserts a new tbMusicFiles record
253-SQL> CREATE OR REPLACE PROCEDURE add_music_file
  2    (
  3  	 bandId        in  tbMusicFiles.band_id%type,
  4  	 title	       in  tbMusicFiles.title%type,
  5  	 filePath      in  tbMusicFiles.file_path%type,
  6  	 musicFileId   out tbMusicFileIds.music_file_id%type
  7    )
  8  IS
  9    bandMusicFileId char(2) default null;
 10  BEGIN
 11  
 12    /* Get the band member id */
 13    SELECT music_file_id into bandMusicFileId
 14    FROM (
 15  	 SELECT music_file_id, rownum r
 16  	 FROM tbMusicFileIds a
 17  	 WHERE NOT EXISTS (
 18  	   SELECT *
 19  	   FROM tbMusicFiles b
 20  	   WHERE a.music_file_id = b.music_file_id AND
 21  		 b.band_id = bandId ) AND
 22  		 rownum <= 1
 23    )
 24    WHERE r > 0;
 25  
 26    IF bandMusicFileId IS NOT NULL THEN
 27  	 /* Insert the new music file record */
 28  	 musicFileId := bandMusicFileId;
 29  
 30  	 INSERT INTO tbMusicFiles(band_id, music_file_id, title, file_path)
 31  	 VALUES
 32  	   (
 33  	     bandId,
 34  	     musicFileId,
 35  	     title,
 36  	     filePath
 37  	   );
 38    ELSE
 39  	 /* If a band has the reached the max number of files return -1 */
 40  	 musicFileId := -1;
 41    END IF;
 42  
 43  END add_music_file;
 44  /

Procedure created.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    TEST STORED PROCS
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    Testing add_band_member
253-SQL> -- ******************************************************
253-SQL> -- Setup Start
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(70, 'test', 'test@test.com', '3ncryp73d', 'First', 'Last');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(80, 70, 'Band');

1 row created.

253-SQL> -- Setup End
253-SQL> 
253-SQL> SELECT * FROM tbMembers;

no rows selected

253-SQL> 
253-SQL> DECLARE
  2    member_id char(2);
  3  BEGIN
  4    add_band_member(80, 'First Last', 'Guitar', member_id);
  5  END;
  6  /

PL/SQL procedure successfully completed.

253-SQL> 
253-SQL> SELECT * FROM tbMembers;

BAND ME NAME                                                                    
---- -- ----------------------------------------                                
INSTRUMENT                                                                      
----------------------------------------                                        
80   1  First Last                                                              
Guitar                                                                          
                                                                                

253-SQL> 
253-SQL> -- Cleanup Start
253-SQL> DELETE FROM tbMembers;

1 row deleted.

253-SQL> DELETE FROM tbBands;

1 row deleted.

253-SQL> DELETE FROM tbUsers;

1 row deleted.

253-SQL> -- Cleanup End
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    Testing add_music_file
253-SQL> -- ******************************************************
253-SQL> -- Setup Start
253-SQL> INSERT INTO tbUsers(user_id, username, email, pwd, first_name, last_name)
  2  VALUES(70, 'test', 'test@test.com', '3ncryp73d', 'First', 'Last');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(band_id, maintainer_id, name)
  2  VALUES(80, 70, 'Band');

1 row created.

253-SQL> -- Setup End
253-SQL> 
253-SQL> SELECT * FROM tbMusicFiles;

no rows selected

253-SQL> 
253-SQL> DECLARE
  2    music_file_id char(2);
  3  BEGIN
  4    add_music_file(80, 'Test Title', '/path/to/file.mp3', music_file_id);
  5  END;
  6  /

PL/SQL procedure successfully completed.

253-SQL> 
253-SQL> SELECT * FROM tbMusicFiles;

BAND MU TITLE                                                                   
---- -- ----------------------------------------                                
FILE_PATH                                                                       
--------------------------------------------------------------------------------
UPLOAD_DA                                                                       
---------                                                                       
80   1  Test Title                                                              
/path/to/file.mp3                                                               
16-DEC-12                                                                       
                                                                                

253-SQL> 
253-SQL> -- Cleanup Start
253-SQL> DELETE FROM tbMusicFiles;

1 row deleted.

253-SQL> DELETE FROM tbBands;

1 row deleted.

253-SQL> DELETE FROM tbUsers;

1 row deleted.

253-SQL> -- Cleanup End
253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    CREATE TRIGGERS
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> -- Auto Increment user_id on INSERT
253-SQL> CREATE OR REPLACE TRIGGER TR_tbUsers_in
  2    before insert on tbUsers
  3    for each row
  4  
  5    begin
  6  	 SELECT usersSeq.nextval
  7  	 INTO :new.user_id
  8  	 FROM dual;
  9  
 10    end TR_tbUsers_in;
 11  /

Trigger created.

253-SQL> 
253-SQL> -- Auto Increment venue_id on INSERT
253-SQL> CREATE OR REPLACE TRIGGER TR_tbVenues_in
  2    before insert on tbVenues
  3    for each row
  4  
  5    begin
  6  	 SELECT venuesSeq.nextval
  7  	 INTO :new.venue_id
  8  	 FROM dual;
  9  
 10    end TR_tbVenues_in;
 11  /

Trigger created.

253-SQL> 
253-SQL> -- Auto Increment show_id on INSERT
253-SQL> CREATE OR REPLACE TRIGGER TR_tbShows_in
  2    before insert
  3    on tbShows
  4    for each row
  5  
  6    begin
  7  	 SELECT showsSeq.nextval
  8  	 INTO :new.show_id
  9  	 FROM dual;
 10  
 11    end TR_tbShows_in;
 12  /

Trigger created.

253-SQL> 
253-SQL> CREATE OR REPLACE TRIGGER TR_tbShows_votingOverlap
  2    before insert on tbShows
  3    for each row
  4  
  5    DECLARE
  6  	 overlapCount NUMBER;
  7    BEGIN
  8  
  9  	 SELECT count(*) into overlapCount
 10  	 FROM tbShows
 11  	 WHERE (voting_start_date <= :new.voting_start_date AND voting_end_date >= :new.voting_start_date) OR
 12  	       (voting_start_date <= :new.voting_end_date   AND voting_end_date >= :new.voting_end_date);
 13  
 14  	 IF overlapCount > 0 THEN
 15  	   raise_application_error(-20001, 'tbShows INSERT EXCEPTION: The show being inserted overlaps with an existing show');
 16  	 END IF;
 17  
 18    END TR_tbShows_votingOverlap;
 19  /

Trigger created.

253-SQL> 
253-SQL> -- Auto Increment band_id on INSERT
253-SQL> CREATE OR REPLACE TRIGGER TR_tbBands_in
  2    before insert on tbBands
  3    for each row
  4  
  5    begin
  6  	 SELECT bandsSeq.nextval
  7  	 INTO :new.band_id
  8  	 FROM dual;
  9  
 10    end TR_tbBands_in;
 11  /

Trigger created.

253-SQL> 
253-SQL> -- Auto Increment entry_id on INSERT
253-SQL> CREATE OR REPLACE TRIGGER TR_tbEntries_in
  2    before insert on tbEntries
  3    for each row
  4  
  5    begin
  6  	 SELECT entriesSeq.nextval
  7  	 INTO :new.entry_id
  8  	 FROM dual;
  9  
 10    end TR_tbEntries_in;
 11  /

Trigger created.

253-SQL> 
253-SQL> -- Auto Increment vote_id on INSERT
253-SQL> CREATE OR REPLACE TRIGGER TR_tbVotes_in
  2    before insert on tbVotes
  3    for each row
  4  
  5    begin
  6  	 SELECT votesSeq.nextval
  7  	 INTO :new.vote_id
  8  	 FROM dual;
  9  
 10    end TR_tbVotes_in;
 11  /

Trigger created.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --   TR_tbUsers_in test
253-SQL> -- ******************************************************
253-SQL> SELECT * FROM tbUsers;

no rows selected

253-SQL> 
253-SQL> INSERT INTO tbUsers(username, email, pwd, first_name, last_name)
  2  VALUES('testuname1', 'test1@test.com', '3nCryp73d', 'FirstName1', 'LastName1');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(username, email, pwd, first_name, last_name)
  2  VALUES('testuname2', 'test2@test.com', '3nCryp73d', 'FirstName2', 'LastName2');

1 row created.

253-SQL> 
253-SQL> SELECT user_id, username FROM tbUsers;

USER_ USERNAME                                                                  
----- ----------------------------------------                                  
2     testuname2                                                                
1     testuname1                                                                

253-SQL> 
253-SQL> DELETE FROM tbUsers;

2 rows deleted.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --   TR_tbVenues_in test
253-SQL> -- ******************************************************
253-SQL> SELECT * FROM tbVenues;

no rows selected

253-SQL> 
253-SQL> INSERT INTO tbVenues(name, street, city, state, zip)
  2  VALUES('Test1', '123 Fake St', 'Boston', 'MA', '02115');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbVenues(name, street, city, state, zip)
  2  VALUES('Test2', '124 Fake St', 'Boston', 'MA', '02116');

1 row created.

253-SQL> 
253-SQL> SELECT venue_id, name FROM tbVenues;

VE NAME                                                                         
-- ----------------------------------------                                     
1  Test1                                                                        
2  Test2                                                                        

253-SQL> 
253-SQL> DELETE FROM tbVenues;

2 rows deleted.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --   TR_tbShows_in test
253-SQL> -- ******************************************************
253-SQL> SELECT * FROM tbShows;

no rows selected

253-SQL> 
253-SQL> INSERT INTO tbVenues(name, street, city, state, zip)
  2  VALUES('Test1', '123 Fake St', 'Boston', 'MA', '02115');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbShows(venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(venuesSeq.currval, sysdate, sysdate + 10, sysdate + 20);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbShows(venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(venuesSeq.currval, sysdate + 25, sysdate + 50, sysdate + 75);

1 row created.

253-SQL> 
253-SQL> SELECT show_id, venue_id FROM tbShows;

SHOW VE                                                                         
---- --                                                                         
1    3                                                                          
2    3                                                                          

253-SQL> 
253-SQL> DELETE FROM tbShows;

2 rows deleted.

253-SQL> DELETE FROM tbVenues;

1 row deleted.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --   TR_tbShows_votingOverlap tests
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> SELECT * FROM tbShows;

no rows selected

253-SQL> 
253-SQL> INSERT INTO tbVenues(name, street, city, state, zip)
  2  VALUES('Test1', '123 Fake St', 'Boston', 'MA', '02115');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbShows(venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(venuesSeq.currval, to_date('10/01/2012', 'mm/dd/yyyy'), to_date('12/01/2012', 'mm/dd/yyyy'), to_date('12/20/2012', 'mm/dd/yyyy'));

1 row created.

253-SQL> 
253-SQL> SELECT * FROM tbShows;

SHOW VE CREATED_A VOTING_ST VOTING_EN SHOW_DATE                                 
---- -- --------- --------- --------- ---------                                 
3    4  16-DEC-12 01-OCT-12 01-DEC-12 20-DEC-12                                 

253-SQL> 
253-SQL> -- On insert
253-SQL> -- Attempt to insert show where the voting start date is between an existing shows start and end date
253-SQL> INSERT INTO tbShows(venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(venuesSeq.currval, to_date('10/20/2012', 'mm/dd/yyyy'), to_date('02/01/2013', 'mm/dd/yyyy'), to_date('03/01/2013', 'mm/dd/yyyy'));
VALUES(venuesSeq.currval, to_date('10/20/2012', 'mm/dd/yyyy'), to_date('02/01/2013', 'mm/dd/yyyy'), to_date('03/01/2013', 'mm/dd/yyyy'))
       *
ERROR at line 2:
ORA-20001: tbShows INSERT EXCEPTION: The show being inserted overlaps with an 
existing show 
ORA-06512: at "SPULLEN.TR_TBSHOWS_VOTINGOVERLAP", line 11 
ORA-04088: error during execution of trigger 'SPULLEN.TR_TBSHOWS_VOTINGOVERLAP' 


253-SQL> 
253-SQL> -- Attempt to insert show where the voting end date is between an existing shows start and end date
253-SQL> INSERT INTO tbShows(venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(venuesSeq.currval, to_date('09/01/2012', 'mm/dd/yyyy'), to_date('10/10/2012', 'mm/dd/yyyy'), to_date('03/01/2013', 'mm/dd/yyyy'));
VALUES(venuesSeq.currval, to_date('09/01/2012', 'mm/dd/yyyy'), to_date('10/10/2012', 'mm/dd/yyyy'), to_date('03/01/2013', 'mm/dd/yyyy'))
       *
ERROR at line 2:
ORA-20001: tbShows INSERT EXCEPTION: The show being inserted overlaps with an 
existing show 
ORA-06512: at "SPULLEN.TR_TBSHOWS_VOTINGOVERLAP", line 11 
ORA-04088: error during execution of trigger 'SPULLEN.TR_TBSHOWS_VOTINGOVERLAP' 


253-SQL> 
253-SQL> SELECT * FROM tbShows;

SHOW VE CREATED_A VOTING_ST VOTING_EN SHOW_DATE                                 
---- -- --------- --------- --------- ---------                                 
3    4  16-DEC-12 01-OCT-12 01-DEC-12 20-DEC-12                                 

253-SQL> 
253-SQL> DELETE FROM tbShows;

1 row deleted.

253-SQL> DELETE FROM tbVenues;

1 row deleted.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --   TR_tbBands_in test
253-SQL> -- ******************************************************
253-SQL> SELECT * FROM tbBands;

no rows selected

253-SQL> 
253-SQL> INSERT INTO tbUsers(username, email, pwd, first_name, last_name)
  2  VALUES('testuname', 'test@test.com', '3nCryp73d', 'FirstName', 'LastName');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(maintainer_id, name)
  2  VALUES(usersSeq.currval, 'Test Band Name1');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(maintainer_id, name)
  2  VALUES(usersSeq.currval, 'Test Band Name2');

1 row created.

253-SQL> 
253-SQL> SELECT band_id, maintainer_id, name FROM tbBands;

BAND MAINT NAME                                                                 
---- ----- ----------------------------------------                             
2    3     Test Band Name2                                                      
1    3     Test Band Name1                                                      

253-SQL> 
253-SQL> DELETE FROM tbBands;

2 rows deleted.

253-SQL> DELETE FROM tbUsers;

1 row deleted.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --   TR_tbEntries_in test
253-SQL> -- ******************************************************
253-SQL> SELECT * FROM tbEntries;

no rows selected

253-SQL> 
253-SQL> INSERT INTO tbVenues(name, street, city, state, zip)
  2  VALUES('Test', '123 Fake St', 'Boston', 'MA', '02115');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbShows(venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(venuesSeq.currval, sysdate, sysdate + 10, sysdate + 20);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(username, email, pwd, first_name, last_name)
  2  VALUES('testuname1', 'test1@test.com', '3nCryp73d', 'FirstName1', 'LastName1');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(maintainer_id, name)
  2  VALUES(usersSeq.currval, 'Test Band Name1');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbEntries(band_id, show_id)
  2  VALUES(bandsSeq.currval, showsSeq.currval);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(username, email, pwd, first_name, last_name)
  2  VALUES('testuname2', 'test2@test.com', '3nCryp73d', 'FirstName2', 'LastName2');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(maintainer_id, name)
  2  VALUES(usersSeq.currval, 'Test Band Name2');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbEntries(band_id, show_id)
  2  VALUES(bandsSeq.currval, showsSeq.currval);

1 row created.

253-SQL> 
253-SQL> SELECT entry_id, band_id FROM tbEntries;

ENTRY_ID BAND                                                                   
-------- ----                                                                   
1        3                                                                      
2        4                                                                      

253-SQL> 
253-SQL> DELETE FROM tbEntries;

2 rows deleted.

253-SQL> DELETE FROM tbBands;

2 rows deleted.

253-SQL> DELETE FROM tbShows;

1 row deleted.

253-SQL> DELETE FROM tbVenues;

1 row deleted.

253-SQL> DELETE FROM tbUsers;

2 rows deleted.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --   TR_tbVotes_in test
253-SQL> -- ******************************************************
253-SQL> SELECT * FROM tbVotes;

no rows selected

253-SQL> 
253-SQL> INSERT INTO tbVenues(name, street, city, state, zip)
  2  VALUES('Test', '123 Fake St', 'Boston', 'MA', '02115');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbShows(venue_id, voting_start_date, voting_end_date, show_date)
  2  VALUES(venuesSeq.currval, sysdate, sysdate + 10, sysdate + 20);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(username, email, pwd, first_name, last_name)
  2  VALUES('testuname1', 'test1@test.com', '3nCryp73d', 'FirstName1', 'LastName1');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbBands(maintainer_id, name)
  2  VALUES(usersSeq.currval, 'Test Band Name1');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbEntries(band_id, show_id)
  2  VALUES(bandsSeq.currval, showsSeq.currval);

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(username, email, pwd, first_name, last_name)
  2  VALUES('testuname2', 'test2@test.com', '3nCryp73d', 'FirstName2', 'LastName2');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbVotes(entry_id, user_id, rating)
  2  VALUES(entriesSeq.currval, usersSeq.currVal, 4);

1 row created.

253-SQL> 
253-SQL> SELECT * FROM tbVotes;

VOTE_ID  ENTRY_ID USER_     RATING DATE_VOTE                                    
-------- -------- ----- ---------- ---------                                    
1        3        7              4 16-DEC-12                                    

253-SQL> 
253-SQL> DELETE FROM tbVotes;

1 row deleted.

253-SQL> DELETE FROM tbEntries;

1 row deleted.

253-SQL> DELETE FROM tbBands;

1 row deleted.

253-SQL> DELETE FROM tbShows;

1 row deleted.

253-SQL> DELETE FROM tbVenues;

1 row deleted.

253-SQL> DELETE FROM tbUsers;

2 rows deleted.

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --   Setting up test user accounts
253-SQL> -- ******************************************************
253-SQL> INSERT INTO tbUsers(username, email, pwd, first_name, last_name)
  2  VALUES('user', 'user@test.com', '253user', 'Joe', 'User');

1 row created.

253-SQL> 
253-SQL> INSERT INTO tbUsers(username, email, pwd, first_name, last_name, is_admin)
  2  VALUES('admin', 'admin@test.com', '253admin', 'Joe', 'Admin', 1);

1 row created.

253-SQL> 
253-SQL> SELECT user_id, username FROM tbUsers;

USER_ USERNAME                                                                  
----- ----------------------------------------                                  
8     user                                                                      
9     admin                                                                     

253-SQL> 
253-SQL> -- ******************************************************
253-SQL> --    END SESSION
253-SQL> -- ******************************************************
253-SQL> 
253-SQL> spool off
